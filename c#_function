list.Skip(1) -- skip first item of the list

-- Rollback if any error is thrown
using System.Transactions;
using TransactionScope scope = new TransactionScope(); --used to not complete a sql transaction if any error is throw in the middle, will only be completed and commited if it hits scope.complete
scope.Complete();

-- Float to string examples
myFloatVariable.ToString("0.00"); //2dp Number

myFloatVariable.ToString("n2"); // 2dp Number

myFloatVariable.ToString("c2"); // 2dp currency with currency symbol

-- Add custom class function to IServiceCollection
public static class ServiceCollectionExtensions
{
   public static IServiceCollection AddInfrastructure(this IServiceCollection services)
   {
       services.AddScoped<IEmployeeRepository, EmployeeRepository>();         

       return services;
   }

   public static IServiceCollection AddApplication(this IServiceCollection services)
   {
       services.AddScoped<IEmployeeService, EmployeeService>();        

       return services;
   }
}
public void ConfigureServices(IServiceCollection services)
   {
       services
           .AddApplication()
           .AddInfrastructure();

       services.AddControllers();

       services.AddSwaggerGen(c =>
       {
           c.SwaggerDoc("v1", new OpenApiInfo { Title = "ArtigoBoasPraticas.API", Version = "v1" });
       });
   }
--

----Dapper------

var teste = connection.Query<Model1, Model2, Model3, ModelReturned>(sql, (auxModel1, auxModel2, auxModel3) =>
 {
 return Model1;
},
 splitOn: "Duplos, Localizacao") --where dapper should split the result of the sql to set it to a model, should always use the next element after the one you want to split
                                 -- e. duplos starts Model2 and before it there are the elements of Model1, so to get the Model1 is necessary to split on the first element of the next model
.ToList();
