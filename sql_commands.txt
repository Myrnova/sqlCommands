DBCC CHECKIDENT('TableName', RESEED, 0) --reset identity

-- Begin a transaction without comminting to test the query
BEGIN TRANSACTION;
UPDATE table
SET col = 'something'
WHERE col2 = 'something else';
COMMIT;
ROLLBACK;
--

COLLATE Latin1_General_CI_AI LIKE

--

ALTER TABLE TableName add Constraint UK_TableName_ColName unique (colname) --make a column have unique values

-- Get a inserted id directed to a variable without using scope_identity
DECLARE  @outputID Table(id int)
INSERT INTO TableName(col1, col2) OUTPUT inserted.ID INTO @outputID  
                                             VALUES (@col1, @col2)
                                             
-- Insert into a table using a second table or variable as table
INSERT INTO TableName(col1, col2) SELECT col1, col2 from @variableTable


--example using type as variable	
	
@TotemID int,
@ValueID int,
@guess Guess_TYPE READONLY
AS 

DECLARE @outputID Table(id int)
INSERT INTO Game(TotemID, ValueID) OUTPUT inserted.ID INTO @outputID  
                                             VALUES (@TotemID, @ValueID);

			DECLARE @GameID int = SCOPE_IDENTITY();
            UPDATE Totem SET update_at=getdate() WHERE ID = @TotemID;
			
			INSERT INTO GameGuess(Team1, Draw, Team2, GameID) OUTPUT inserted.ID INTO @outputID SELECT Team1, Draw, Team2, @GameID from @guess
			
			SELECT * FROM @outputCodigo

CREATE TYPE [dbo].[Guess_TYPE] AS TABLE(
	[Team1] [varchar](20) NULL,
	[Team2] [varchar](20) NULL,
	[Draw] [varchar](20) NULL,
	[GameID] [int] NULL
)
GO


https://stackoverflow.com/questions/37303779/sql-calculate-percentage-on-countcolumn












-----------------------------------------------------------------------------------------

POSTGRESQL


USING in JOIN!
A clause of the form USING ( a, b, ... ) is shorthand for ON left_table.a = right_table.a AND left_table.b = right_table.b .... Also, USING implies that only one of each pair of equivalent columns will be included in the join output, not both.

select * from Table1 inner join Table2 using(id, name) 

  -------- can be done with ON as the following -------- 

select * from Table1 inner join Table2 ON table1.id = table2.id AND table1.name = table2.name

	
STATIC VALUES -- https://www.postgresql.org/docs/current/queries-values.html
with company_ids as (
      select * from (
        values
        ${ids}
      ) as t(id)
)